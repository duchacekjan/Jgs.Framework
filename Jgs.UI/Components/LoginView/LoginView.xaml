<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:Jgs.UI.Components"
                    xmlns:cnv="clr-namespace:Jgs.UI.Converters"
                    xmlns:cnvl="clr-namespace:Jgs.UI.Components.LoginViewCore"
                    xmlns:resx="clr-namespace:Jgs.UI.Resources">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Jgs.UI;component/Themes/Button.xaml"/>
        <ResourceDictionary Source="/Jgs.UI;component/Themes/Colors.xaml"/>
        <ResourceDictionary Source="/Jgs.UI;component/Themes/TextBox.xaml"/>
        <ResourceDictionary Source="/Jgs.UI;component/Themes/Vectors.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="{x:Type Label}">
        <Setter Property="Padding" Value="4,2,0,2"/>
    </Style>
    <Style TargetType="{x:Type Button}"
           BasedOn="{StaticResource BaseButton}"
           x:Key="BaseLoginViewButton">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MinHeight" Value="24"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    <Style TargetType="{x:Type Button}"
           BasedOn="{StaticResource BaseLoginViewButton}"
           x:Key="LoginButton">
        <Setter Property="Background" Value="{StaticResource LoginButonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource LoginButonForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource LoginButonBorderBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource LoginButonPressedBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Button}"
           BasedOn="{StaticResource BaseLoginViewButton}"
           x:Key="AnonymousButton">
        <Setter Property="Background" Value="{StaticResource AnonymousButonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource AnonymousButonForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource AnonymousButonBorderBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource AnonymousButonPressedBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type c:LoginView}">
        <Setter Property="Background" Value="{StaticResource ControlBackground}"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:LoginView}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <DockPanel>
                            <Grid DockPanel.Dock="Bottom">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="1"
                                        Style="{StaticResource AnonymousButton}"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsAnonymousAllowed, Converter={cnv:BoolToVisibilityConverter}}"
                                        x:Name="PART_Anonymous"
                                        Content="{TemplateBinding AnonymousButtonLabel}"
                                        ToolTip="{TemplateBinding AnonymousButtonTooltip}"/>
                                <Button Grid.Column="0"
                                        x:Name="PART_Login"
                                        Content="{TemplateBinding LoginButtonLabel}"
                                        ToolTip="{TemplateBinding LoginButtonTooltip}">
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}"
                                               BasedOn="{StaticResource LoginButton}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=PART_Anonymous, Path=Visibility}" Value="Collapsed">
                                                    <Setter Property="Grid.ColumnSpan" Value="2"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                            <Grid DockPanel.Dock="Top">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ContentPresenter Grid.Row="0"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  Content="{TemplateBinding Logo}"/>
                                <Label Grid.Row="1"
                                       Content="{TemplateBinding LoginLabel}"
                                       FontWeight="Bold"/>
                                <TextBox Grid.Row="2"
                                         x:Name="PART_LoginInput"
                                         MinHeight="27"
                                         Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=UserName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         Style="{StaticResource BaseTextBox}"
                                         ToolTip="{TemplateBinding LoginTooltip}"/>
                                <Label Grid.Row="3"
                                       Content="{TemplateBinding PasswordLabel}"
                                       FontWeight="Bold"/>
                                <Border Grid.Row="4"
                                        x:Name="PART_BorderPasswordMouseOver"
                                        MinHeight="24"
                                        Padding="1"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        BorderThickness="0">
                                    <Border Background="{Binding ElementName=PART_PasswordInput, Path=Background}"
                                            BorderBrush="{Binding ElementName=PART_PasswordInput, Path=BorderBrush}"
                                            BorderThickness="1"
                                            x:Name="PART_BorderPassword"
                                            CornerRadius="4"
                                            ToolTip="{TemplateBinding PasswordTooltip}"
                                            Padding="1">
                                        <Grid>
                                            <PasswordBox x:Name="PART_PasswordInput"
                                                         BorderThickness="0"
                                                         MinHeight="22"
                                                         VerticalContentAlignment="Center"
                                                         Visibility="{Binding ElementName=PART_PasswordInputSwitch, Path=IsChecked, Converter={cnv:BoolToVisibilityConverter Negate=True}, Mode=OneWay}"/>
                                            <TextBox x:Name="PART_PasswordInputPlain"
                                                     Panel.ZIndex="100"
                                                     Style="{StaticResource BorderlessTextbox}"
                                                     Visibility="{Binding ElementName=PART_PasswordInputSwitch, Path=IsChecked, Converter={cnv:BoolToVisibilityConverter}, Mode=OneWay}"/>
                                            <c:PathToggleButton Panel.ZIndex="1000"
                                                                    x:Name="PART_PasswordInputSwitch"
                                                                    IsChecked="False"
                                                                    HorizontalAlignment="Right"
                                                                    VerticalAlignment="Center"
                                                                    Path="{StaticResource Eye}"
                                                                    Height="16"/>
                                        </Grid>
                                    </Border>
                                </Border>
                                <TextBox Grid.Row="5"
                                         Foreground="{StaticResource ErrorMessageForeground}"
                                         Background="{StaticResource ErrorMessageBackground}"
                                         x:Name="PART_ErrorMessage"
                                         Text="{TemplateBinding ErrorMessage}"
                                         ToolTip="{TemplateBinding ErrorMessage}"
                                         TextWrapping="Wrap"
                                         Margin="0,0,0,2"
                                         Style="{StaticResource BorderlessTextbox}"
                                         IsReadOnly="True"/>
                                <CheckBox Grid.Row="6"
                                          x:Name="PART_Remember"
                                          Margin="4,2"
                                          HorizontalAlignment="Left"
                                          IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Remember, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          Content="{TemplateBinding RememberLabel}"
                                          ToolTip="{TemplateBinding RememberTooltip}"/>
                            </Grid>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ElementName=PART_ErrorMessage, Path=Text, Converter={cnv:StringNullOrEmptyConverter}}" Value="True">
                            <Setter TargetName="PART_ErrorMessage" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=PART_BorderPasswordMouseOver, Path=IsMouseOver}" Value="True">
                            <Setter TargetName="PART_BorderPasswordMouseOver" Property="Padding" Value="0"/>
                            <Setter TargetName="PART_BorderPassword" Property="BorderThickness" Value="2"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=PART_PasswordInput, Path=IsKeyboardFocused}" Value="True">
                            <Setter TargetName="PART_BorderPasswordMouseOver" Property="Padding" Value="0"/>
                            <Setter TargetName="PART_BorderPassword" Property="BorderThickness" Value="2"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=PART_ErrorMessage, Path=Text, Converter={cnv:StringNullOrEmptyConverter}}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=EmptyErrorMessageVisibility}" Value="Collapsed"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="PART_ErrorMessage" Property="Visibility" Value="Collapsed"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=PART_ErrorMessage, Path=Text, Converter={cnv:StringNullOrEmptyConverter}}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=EmptyErrorMessageVisibility}" Value="Hidden"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="PART_ErrorMessage" Property="Visibility" Value="Hidden"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSubmitted}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEmptyAllowed, Converter={cnvl:HasFlagConverter Flag=UserName}}" Value="False"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=UserName, Converter={cnv:StringNullOrEmptyConverter}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="PART_LoginInput" Property="BorderBrush" Value="{StaticResource ErrorMessageForeground}"/>
                                <Setter TargetName="PART_LoginInput" Property="Background" Value="{StaticResource ErrorMessageBackground}"/>
                                <Setter TargetName="PART_LoginInput" Property="ToolTip" Value="{x:Static resx:Resources.FieldCannotBeEmpty}"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSubmitted}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEmptyAllowed, Converter={cnvl:HasFlagConverter Flag=Password}}" Value="False"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Password, Converter={cnv:StringNullOrEmptyConverter}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="PART_PasswordInput" Property="BorderBrush" Value="{StaticResource ErrorMessageForeground}"/>
                                <Setter TargetName="PART_PasswordInput" Property="Background" Value="{StaticResource ErrorMessageBackground}"/>
                                <Setter TargetName="PART_BorderPassword" Property="ToolTip" Value="{x:Static resx:Resources.FieldCannotBeEmpty}"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>