<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:cnv="clr-namespace:Jgs.Framework.UI.Converters">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Jgs.Framework.UI;component/Themes/Colors.xaml"/>
        <ResourceDictionary Source="/Jgs.Framework.UI;component/Themes/Vectors.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="{x:Type Button}"
           x:Key="BaseButton">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinWidth" Value="22"/>
        <Setter Property="MinHeight" Value="22"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="Transparent"
                            BorderThickness="0"
                            Background="Transparent"
                            Padding="{TemplateBinding BorderThickness}"
                            x:Name="MouseOverBorder">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="2"
                                x:Name="border">
                            <ContentPresenter TextElement.Foreground="{TemplateBinding Foreground}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              x:Name="PART_Content"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={cnv:RatioConverter Ratio=2, MinValue=0}}" />
                            <Setter TargetName="MouseOverBorder" Property="Padding" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonPressedBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Content" Property="TextElement.Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="BaseRoundCloseButton">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MaxHeight" Value="16"/>
        <Setter Property="MaxWidth" Value="16"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Background, Converter={cnv:ContrastColorConverter}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Foreground}"
                            CornerRadius="8">
                        <Border Background="Transparent"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                            <Path Data="{Binding Source={StaticResource CloseButton}, Path=Data}"
                                  Stretch="Uniform"
                                  x:Name="PART_Path"
                                  Fill="{TemplateBinding Background}"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=Background, Converter={cnv:ContrastColorConverter Light={StaticResource CrossFocusColorColor},Dark=LightGray}}" TargetName="PART_Path"/>
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}"
           BasedOn="{StaticResource BaseButton}"
           x:Key="BrowseButton">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="{StaticResource ButtonBorderBrush}"
                            BorderThickness="1,0,0,0"
                            Background="Transparent"
                            Padding="2"
                            x:Name="MouseOverBorder">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="0,4,4,0"
                                x:Name="border">
                            <ContentPresenter TextElement.Foreground="{TemplateBinding Foreground}"
                                              VerticalAlignment="Center"
                                              x:Name="PART_Content"
                                              Margin="4,0"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonPressedBackgroundBrush}"       TargetName="MouseOverBorder"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Padding" Value="0" TargetName="MouseOverBorder"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_Content" Property="TextElement.Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>